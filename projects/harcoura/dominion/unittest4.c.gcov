        -:    0:Source:unittest4.c
        -:    0:Graph:unittest4.gcno
        -:    0:Data:unittest4.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:/*
        -:    2:Chad Erdwins CS 362
        -:    3:unittest4.c
        -:    4:testing the function whoseTurn() in dominion.c
        -:    5:*/
        -:    6:
        -:    7:#include "dominion.h"
        -:    8:#include "stdio.h"
        -:    9:
        -:   10:int critFail = 0;
        -:   11:
        1:   12:void personalAssert(int choya) {
        1:   13:	if (!choya) {
    #####:   14:		printf("FAILED ASSERTION: \n");
    #####:   15:		critFail = 1;
        -:   16:	}
        1:   17:}
        -:   18:
        1:   19:int main() {
        1:   20:	printf("Now Testing whoseTurn()...");
        -:   21:	//declaring game state
        -:   22:	struct gameState gameOn;
        -:   23:
        -:   24:	//declaring number of players
        1:   25:	gameOn.numPlayers = 4;
        -:   26:	//passing whose turn it is
        1:   27:	gameOn.whoseTurn = 2;
        -:   28:
        -:   29:	//passing the function saying it is player 2's turn
        1:   30:	personalAssert(whoseTurn(&gameOn) == 2);
        -:   31:
        -:   32:	//logic to check if whoseTurn() is bugged
        1:   33:	if (!critFail) {
        1:   34:		printf("Passed Successfully!\n");
        -:   35:	}
        -:   36:	else {
    #####:   37:		printf("Failed Test!\n");
        -:   38:	}
        1:   39:	return 0;
        -:   40:}
